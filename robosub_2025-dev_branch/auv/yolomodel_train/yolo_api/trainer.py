from ultralytics import YOLO

class YOLOTrainer:  
    """
    Handles YOLOv8 model training given dataset and configuration.
    """
    def __init__(self, model_arch="yolov8n.pt", data_yaml="data.yaml", epochs=20, imgsz=640):
        """
        Args:
            model_arch: Path to YOLOv8 architecture (e.g., "yolov8n.pt", "yolov8s.pt")
            data_yaml: Path to YOLOv8 data config (usually generated by Roboflow)
            epochs: Number of training epochs.
            imgsz: Training image size.
        """
        self.model_arch = model_arch
        self.data_yaml = data_yaml
        self.epochs = epochs
        self.imgsz = imgsz

    def train_model(self, save_dir="runs/train"):
        """
        Trains a YOLOv8 model and saves the weights and results.
        """
        model = YOLO(self.model_arch)
        # Start training
        model.train(
            data=self.data_yaml,
            epochs=self.epochs,
            imgsz=self.imgsz,
            project=save_dir,
            name="yolov8_custom"
        )
        print(f"Model trained and saved in {save_dir}/yolov8_custom")
        return model
